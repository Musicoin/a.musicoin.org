<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Musicoin Admin Dashboard Template</title>
    <link rel="stylesheet" href="/dependencies/admin/css/admin.min.css">
    <link rel="stylesheet" href="/dependencies/admin/css/font-awesome.min.css">
    <link rel="stylesheet" href="/dependencies/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/dependencies/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/dependencies/messg-2.1.0/index.css">
</head>

<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        <%- include admin-header.ejs %>
            <!-- Content Wrapper. Contains page content -->
            <div class="content-wrapper">
                <!-- Content Header (Page header) -->
                <div class="content-header">
                    <div class="container-fluid">
                        <div class="row mb-2">
                            <div class="col-sm-6">
                                <h1 class="m-0 text-dark">Dashboard v2</h1>
                            </div>
                            <!-- /.col -->
                            <div class="col-sm-6">
                                <ol class="breadcrumb float-sm-right">
                                    <li class="breadcrumb-item">
                                        <a href="#">Home</a>
                                    </li>
                                    <li class="breadcrumb-item active">Dashboard v2</li>
                                </ol>
                            </div>
                            <!-- /.col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.container-fluid -->
                </div>
                <!-- /.content-header -->
                <!-- Main content -->

                <section class="content">
                    <div class="row">
                        <div class="col-12">
                            <div class="card-body">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>Profile</th>
                                            <th>Balance</th>
                                            <th>Voting Power</th>
                                            <th>Invited By</th>
                                            <th>Invite Clicked</th>
                                            <th>Linked</th>
                                            <th>Music Released</th>
                                            <th>Invite Left</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>Profile</th>
                                            <th>Balance</th>
                                            <th>Voting Power</th>
                                            <th>Invited By</th>
                                            <th>Invite Clicked</th>
                                            <th>Linked</th>
                                            <th>Music Released</th>
                                            <th>Invite Left</th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                    <!-- /.card -->
            </div>
            <!-- /.col -->
    </div>

    <!-- /.row -->
    </section>
    <!--/. container-fluid -->
    <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->
    </div>
    <!-- ./wrapper -->
        <!-- plugins:js -->
        <script src="/dependencies/admin/js/jquery.min.js" type="text/javascript"></script>
        <!-- Bootstrap -->
        <script src="/dependencies/admin/js/bootstrap.bundle.min.js" type="text/javascript"></script>
        <script src="/dependencies/admin/js/jquery.dataTables.js" type="text/javascript"></script>
        <script src="/dependencies/admin/js/dataTables.bootstrap4.js" type="text/javascript"></script>
        <!-- AdminLTE App -->
        <script src="/dependencies/admin/js/admin.js" type="text/javascript"></script>
        <!-- PAGE PLUGINS -->
        <!-- SparkLine -->
        <script src="/dependencies/admin/js/jquery.sparkline.min.js" type="text/javascript"></script>
        <script src="/dependencies/admin/js/chart.min.js" type="text/javascript"></script>

        <script src="/dependencies/messg-2.1.0/index.js"></script>

    <%- include admin-footer.ejs %>
        <!-- End custom js for this page-->
        <script>
            $(document).ready(function () {
                $(function () {
                    $("#example1").DataTable({
                        "processing": true,
                        "serverSide": true,
                        "ajax": {
                            "url": "/admin/elements/users", "dataSrc": function (json) {
                                var return_data = new Array();
                                for (var i = 0; i < json.length; i++) {
                                    var user = json[i];

                                    var invite = user.invite ? user.invite : {};
                                    var invitedByUser = invite.invitedBy || {};

                                    var profile = "";
                                    var balance = "";
                                    var votingPower = "";
                                    var invitedBy = "";
                                    var inviteClicked = "";
                                    var linked = "";
                                    var musicReleased = "";
                                    var invitedLeft = "";

                                    //Profile Start
                                    if (user.profileAddress && user.draftProfile.artistName) {
                                        profile += '<a target="_blank" href="/artist/' + user.profileAddress + '">' + user.draftProfile.artistName + '</a>';
                                    }
                                    else if (user.draftProfile && user.draftProfile.artistName) {
                                        profile += user.draftProfile.artistName;
                                    } else {
                                        profile += 'unchecked';
                                    }

                                    if (user.draftProfile && typeof user.draftProfile.version != "undefined") {
                                        profile += user.draftProfile.version;
                                    }
                                    if (user.verified) {
                                        profile += '<i class="verified" title="verified user"></i>';
                                    }
                                    profile += '<br>';
                                    profile += user.timeSinceJoining;
                                    //Profile End

                                    //Balance Start
                                    balance += user.balance;
                                    //Balance End

                                    //Vtox Start
                                    votingPower += user.voteMultiplier;
                                    //End

                                    //Invite Start
                                    invitedBy += invite.invitedAs + '<br>';
                                    if (invitedByUser.profileAddress && invitedByUser.draftProfile.artistName) {
                                        invitedBy += 'by <a target="' + invitedByUser + '" href="/artist/' + invitedByUser.profileAddress + '">' + invitedByUser.draftProfile.artistNam + '</a>';
                                    }
                                    invitedBy += '<br>';
                                    invitedBy += invite.inviteCode;
                                    //END

                                    //Invite Clicked
                                    inviteClicked += invite.clicked ? 'checked' : 'unchecked';

                                    linked += '<table cellpadding="2">';
                                    var isInArray = user.hasOwnProperty('google.token');
                                    if (isInArray) {
                                        if (!!user.google.token) {
                                            const googleUrl = user.google.url ? user.google.url : "https://plus.google.com/" + user.google.id;
                                            linked += '<tr><td><span class="btn fa fa-google-plus"></span></td><td class="text-left"><a target=_blank href="' + googleUrl + '">' + user.google.name + "," + user.google.email + '</a></td ></tr >';
                                        }
                                    }
                                    isInArray = user.hasOwnProperty('twitter.token');
                                    if (isInArray) {
                                        if (!!user.twitter.token) {
                                            linked += '<tr><td><span class="btn fa fa-twitter"></span></td><td class="text-left">';
                                            const twitterUrl = user.twitter.url ? user.twitter.url : "https://twitter.com/" + user.twitter.username;

                                            linked += '<a target=_blank href="' + twitterUrl + '"> ' + user.twitter.username + ', ' + user.twitter.displayName + '</a></td></tr>';
                                        }
                                    }
                                    isInArray = user.hasOwnProperty('facebook.token');
                                    if (isInArray) {
                                        if (!!user.facebook.token) {
                                            const facebookUrl = user.facebook.url ? user.facebook.url : "https://www.facebook.com/app_scoped_user_id/" + user.facebook.id;
                                            linked += '<tr><td class=""><span class="btn fa fa-facebook"></span></td><td class="text-left"><a target=_blank href="' + facebookUrl + '">' + user.facebook.name + ', ' + user.facebook.email + '</a></td></tr>';
                                        }
                                    }
                                    var isInArray = user.hasOwnProperty('local.id');
                                    if (isInArray) {
                                        if (!!user.local.id) {
                                            linked += '<tr><td><span class="btn fa fa-envelope-o"></span></td><td class="text-left">' + user.local.email + '</td></tr>';
                                        }
                                    }
                                    linked += '</table>'

                                    //Invite End

                                    //sa
                                    if (user.mostRecentReleaseDate) {
                                        musicReleased += 'yes<br>'
                                    }
                                    else { musicReleased += "no" };

                                    var veryState = user.verified ? "Unverify" : "Verify";
                                    invitedLeft += user.invitesRemaining;
                                    var name = user.draftProfile && user.draftProfile.artistName ? user.draftProfile.artistName : "this user";
                                    var escapedName = name.replace(/'/g, "\\'");
                                    var blockState = user.blocked ? "Unblock Releases" : "Block Releases";
                                    var accountLockState = user.accountLocked ? "Unlock Account" : "Lock Account";
                                    var actionLinks = '<div class="btn-group"><button type="button" class="btn btn-default" data-toggle="dropdown" aria-expanded="false"><span class="caret"></span></button><div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(-65px, 38px, 0px); top: 0px; left: 0px; will-change: transform;"><a class="dropdown-item" href="javascript:void(0)" onclick="verifyUser(this, \'' + user._id + '\', \'' + escapedName + '\')">' + veryState + '</a><a class="dropdown-item" href="javascript:void(0)" onclick="addVotingPower(\'' + user._id + '\', 10)">+10 voting power </a><a class="dropdown-item" href="javascript:void(0)" onclick="addVotingPower(\'' + user._id + '\', -10)">-10 voting power </a><a class="dropdown-item" href="javascript:void(0)" onclick="addInvites(\'' + user._id + '\', 10)">+10 Invites </a><a class="dropdown-item" href="javascript:void(0)" onclick="blockUser(this, \'' + user._id + '\', \'' + escapedName + '\')" > ' + blockState + '</a><a class="dropdown-item" href="javascript:void(0)" onclick="lockUserAccount(this, \'' + user._id + '\', \'' + escapedName + '\')" > ' + accountLockState + '</a>';

                                    if (user.invite.noReward) {
                                        actionLinks += '<a class="dropdown-item" href="javascript:void(0)" onclick="blacklist(\'' + user._id + '\', false)">De-Blacklist (allow invite rewards)</a>';
                                    }
                                    else {
                                        actionLinks += '<a class="dropdown-item" href="javascript:void(0)" onclick="blacklist(\'' + user._id + '\', true)">Blacklist (no invite rewards)</a>';
                                    }
                                    actionLinks += '</div></div>';

                                    return_data.push({
                                        'profile': profile,
                                        'balance': balance,
                                        'votingPower': votingPower,
                                        'invitedBy': invitedBy,
                                        'inviteClicked': inviteClicked,
                                        'linked': linked,
                                        'musicReleased': musicReleased,
                                        'invitedLeft': invitedLeft,
                                        'actionLinks': actionLinks
                                    });
                                }
                                return return_data;
                            }
                        },
                        columns: [
                            { 'data': 'profile' },
                            { 'data': 'balance' },
                            { 'data': 'votingPower' },
                            { 'data': 'invitedBy' },
                            { 'data': 'inviteClicked' },
                            { 'data': 'linked' },
                            { 'data': 'musicReleased' },
                            { 'data': 'invitedLeft' },
                            { 'data': 'actionLinks' }
                        ],
                    });
                });

                function addInvites(id, cnt) {
                    $.post('/admin/invites/add', {
                        id: id,
                        count: cnt
                    }, function (data) {
                        if (data.success) {
                            new Message("Invites added!", "success", 3000);
                            refreshUserContainer();
                        }
                        else {
                            new Message("Failed: " + data.reason, 'error', 5000)
                        }
                    })
                }

                function addVotingPower(id, count) {
                    $.ajax({
                        type: 'POST',
                        url: '/json-api/profile/voting-power/add',
                        data: JSON.stringify({
                            user: id,
                            count: +count
                        }),
                        dataType: 'application/json',
                        contentType: 'application/json'
                    })
                        .always(function (data) {
                            if (data.status === 200) {
                                new Message("Voting power increased!", "success", 3000);
                                refreshUserContainer();
                            }
                            else {
                                new Message("Failed: " + data.reason, 'error', 5000)
                            }
                        });
                }

                function blacklist(id, blacklist) {
                    $.post('/admin/invites/blacklist', {
                        id: id,
                        blacklist: blacklist
                    }, function (data) {
                        if (data.success) {
                            new Message(blacklist ? "User blacklisted!" : "User de-blacklisted", "success", 3000);
                            refreshUserContainer();

                        }
                        else {
                            new Message("Failed: " + data.reason, 'error', 5000)
                        }
                    })
                }

                function lockUserAccount(element, id, name) {
                    var button = $(element);
                    var lock = button.text() == "Lock Account";
                    var msg = lock
                        ? "Are you sure you want to lock " + name + "? The user will not be able to log in."
                        : "Are you sure you want to enable " + name + "? The user will be able to log in again.";
                    var resultMsg = lock
                        ? "User account locked"
                        : "User account unlocked";

                    new Message(msg, 'error', 5000)
                        .button("Yes", function () {
                            $.post('/admin/users/lock', {
                                id: id,
                                lock: lock
                            }, function (data) {
                                if (data.success) {
                                    $(element).text(lock ? "Unlock Account" : "Lock Account");
                                    $(element).toggleClass("btn-danger", !lock);
                                    $(element).toggleClass("btn-success", lock);
                                    new Message(resultMsg, "success", 3000);
                                    refreshUserContainer();
                                }
                                else {
                                    new Message("Failed: " + data.reason, 'error', 5000)
                                }
                            })
                        })
                }

                function verifyUser(element, id, name) {
                    console.log("calling verifyUser " + name);
                    var button = $(element);
                    var verified = button.text() == "Verify";
                    var msg = verified
                        ? "Are you sure you want to verify " + name + "?"
                        : "Are you sure you want remove verification for " + name + "?"
                    var resultMsg = verified
                        ? "User marked as verified"
                        : "Verification flag removed";

                    new Message(msg, 'error', 5000)
                        .button("Yes", function () {
                            $.post('/admin/users/verify', {
                                id: id,
                                verified: verified
                            }, function (data) {
                                if (data.success) {
                                    $(element).text(verified ? "Unverify" : "Verify");
                                    $(element).toggleClass("btn-warning", verified);
                                    $(element).toggleClass("btn-success", !verified);
                                    new Message(resultMsg, "success", 3000);
                                    refreshUserContainer();
                                }
                                else {
                                    new Message("Failed: " + data.reason, 'error', 5000)
                                }
                            })
                        })
                }

                function blockUser(element, id, name) {
                    var button = $(element);
                    var block = button.text() == "Block Releases";
                    var msg = block
                        ? "Are you sure you want to block releases " + name + "?"
                        : "Are you sure you want to enable releases" + name + "?";
                    var resultMsg = block
                        ? "User releases blocked"
                        : "User releases enabled";

                    new Message(msg, 'error', 5000)
                        .button("Yes", function () {
                            $.post('/admin/users/block', {
                                id: id,
                                block: block
                            }, function (data) {
                                if (data.success) {
                                    $(element).text(block ? "Unblock Releases" : "Block Releases");
                                    $(element).toggleClass("btn-warning", !block);
                                    $(element).toggleClass("btn-success", block);
                                    new Message(resultMsg, "success", 3000);
                                    refreshUserContainer();
                                }
                                else {
                                    new Message("Failed: " + data.reason, 'error', 5000)
                                }
                            })
                        })
                }

                function refreshUserContainer() {
                    dynamic.refreshElement($($("#user-container").closest('.dynamic-element')))
                }
            });

        </script>
</body>

</html>
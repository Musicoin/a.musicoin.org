<!doctype html>
<html>

<head>
  <%- include('partials/page-head.ejs') %>
  <meta property="og:title" content="<%=data.title%>"/>
  <meta property="og:type" content="music.song"/>
  <meta property="og:url" content="<%=data.audioUrl%>"/>
  <meta property="og:image" content="<%=data.image%>"/>
  <meta property="og:site_name" content="Musicoin"/>
  <meta property="fb:app_id" content="<%=process.env.FACEBOOK_CLIENT_ID%>"/>
  <meta property="music:musician" content="<%=data.artistProfileAddress%>">
  <style>
    @font-face {
      font-family: Ubuntu;
      src: url('../fonts/Ubuntu-Regular.ttf');
    }
    @font-face {
      font-family: Ubuntu;
      src: url('../fonts/Ubuntu-R.ttf');
    }
  </style>
  <link rel="stylesheet" type="text/css" href="/styles/player.css">
  <link rel="stylesheet" type="text/css" href="/styles/embedded-player.css">
</head>

<body>
	<div id="embedded-player-main" class="embedded-player">
		<%- include('partials/embedded-player.ejs') %>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
  <video id="video"></video>
<script>
  var video = document.getElementById('video');
  if(Hls.isSupported()) {
    var hls = new Hls();
    hls.loadSource('<%=data.audioUrl%>');
    hls.attachMedia(video);
    hls.on(Hls.Events.MANIFEST_PARSED,function() {
      video.play();
  });
 }
 // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
 // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element throught the `src` property.
 // This is using the built-in support of the plain video element, without using hls.js.
 // Note: it would be more normal to wait on the 'canplay' event below however on Safari (where you are most likely to find built-in HLS support) the video.src URL must be on the user-driven
 // white-list before a 'canplay' event will be emitted; the last video event that can be reliably listened-for when the URL is not on the white-list is 'loadedmetadata'.
  else if (video.canPlayType('application/vnd.apple.mpegurl')) {
    video.src = '<%=data.audioUrl%>;
    video.addEventListener('loadedmetadata',function() {
      video.play();
    });
  }
</script>

    <script type="text/javascript" src="/js/player.js"></script>
    <script>
      $(document).ready(function() {
        var audioPlayer = musicoin.audioPlayer;
        audioPlayer.initialize({embedded: true, autoQueue: 'true', onReady: function onReady() {
          if(audioPlayer.autoQueue) {
            audioPlayer.queueTrack('<%=address%>');
          }
        }});
      });
    </script>
</body>

</html>
